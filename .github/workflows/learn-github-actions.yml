name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:
  check-bats-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install -g bats
      - run: bats -v


## Comprender el archivo de flujo de trabajo

# Optional - The name of the workflow as it will appear in the "Actions" tab of the GitHub repository. If this field is omitted, the name of the workflow file will be used instead.
name: learn-github-actions

# Optional - The name for workflow runs generated from the workflow, which will appear in the list of workflow runs on your repository's "Actions" tab. This example uses an expression with the `github` context to display the username of the actor that triggered the workflow run. For more information, see "[AUTOTITLE](/actions/using-workflows/workflow-syntax-for-github-actions#run-name)."
run-name: ${{ github.actor }} is learning GitHub Actions

# Specifies the trigger for this workflow. This example uses the `push` event, so a workflow run is triggered every time someone pushes a change to the repository or merges a pull request.  This is triggered by a push to every branch; for examples of syntax that runs only on pushes to specific branches, paths, or tags, see "[AUTOTITLE](/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore)."
on: [push]

# Groups together all the jobs that run in the `learn-github-actions` workflow.
jobs:

# Defines a job named `check-bats-version`. The child keys will define properties of the job.
  check-bats-version:

# Configures the job to run on the latest version of an Ubuntu Linux runner. This means that the job will execute on a fresh virtual machine hosted by GitHub. For syntax examples using other runners, see "[AUTOTITLE](/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on)"
    runs-on: ubuntu-latest

# Agrupa todos los pasos que se ejecutan en el trabajo `check-bats-version`. Cada elemento anidado en esta sección es una acción o script de shell independiente.
    pasos:

# La palabra clave `uses` especifica que este paso ejecutará la `v4` de la acción `actions/checkout`. Esta es una acción que verifica su repositorio en el ejecutor, lo que le permite ejecutar scripts u otras acciones en su código (como herramientas de compilación y prueba). Debe utilizar la acción de pago cada vez que su flujo de trabajo utilice el código del repositorio.
      - usos: acciones/checkout@v4

# Este paso utiliza la acción `actions/setup-node@v4` para instalar la versión especificada de Node.js. (Este ejemplo usa la versión 20.) Esto coloca los comandos `node` y `npm` en su `PATH`.
      - usos: acciones/setup-node@v4
        con:
          versión de nodo: '20'

# La palabra clave `run` le dice al trabajo que ejecute un comando en el ejecutor. En este caso, está utilizando `npm` para instalar el paquete de prueba de software `bats`.
      - ejecutar: npm install -g bats

# Finalmente, ejecutará el comando `bats` con un parámetro que genera la versión del software.
      - ejecutar: murciélagos -v
              - name: Check semantic version increased
                uses: aleoyakas/check-semver-increased-action@v1.0.0

                    - nombre: acción Helm value.schema.json
                usos: losisin/helm-values-schema-json-action@v1.4.0
            
                          
            
